name: CI

on:
  # Triggers the workflow on push but only for the master branch
  push:
    branches:
      - master
      - 'renovate/**'
  # Triggers the workflow on any pull request
  pull_request:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  NODE_VERSION: 22

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Update npm keys
        run: |
          echo COREPACK_INTEGRITY_KEYS="$(curl -s https://registry.npmjs.org/-/npm/v1/keys | jq -c '{npm: .keys}')" | tee -a "$GITHUB_ENV"
      - run: corepack enable
      - run: pnpm install --frozen-lockfile
      - run: pnpm run build

  build-docker:
    name: Build (Docker)
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build (pandora-server-directory)
        uses: docker/build-push-action@v6
        with:
          context: .
          target: pandora-server-directory
          tags: pandora/server-directory:latest
      - name: Build (pandora-server-shard)
        uses: docker/build-push-action@v6
        with:
          context: .
          target: pandora-server-shard
          tags: pandora/server-shard:latest

  lint:
    name: Lint
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Update npm keys
        run: |
          echo COREPACK_INTEGRITY_KEYS="$(curl -s https://registry.npmjs.org/-/npm/v1/keys | jq -c '{npm: .keys}')" | tee -a "$GITHUB_ENV"
      - run: corepack enable
      - run: pnpm install --frozen-lockfile
      - run: pnpm run setup-dev
      - run: pnpm run lint:root

  test:
    name: Test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Update npm keys
        run: |
          echo COREPACK_INTEGRITY_KEYS="$(curl -s https://registry.npmjs.org/-/npm/v1/keys | jq -c '{npm: .keys}')" | tee -a "$GITHUB_ENV"
      - run: corepack enable
      - run: pnpm install --frozen-lockfile
      - run: pnpm run setup-dev
      - run: pnpm run type-check:test
      - run: pnpm run test --ci --coverage

  test-e2e:
    name: Test (E2E)
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Update npm keys
        run: |
          echo COREPACK_INTEGRITY_KEYS="$(curl -s https://registry.npmjs.org/-/npm/v1/keys | jq -c '{npm: .keys}')" | tee -a "$GITHUB_ENV"
      - run: corepack enable
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - run: pnpm run setup-dev
      - name: Install Playwright dependencies and browsers
        run: pnpm run -C pandora-tests playwright-setup-ci
      - name: Typecheck E2E tests
        run: pnpm run -C pandora-tests type-check
      - name: Run E2E tests
        run: pnpm run -C pandora-tests test-e2e
      - name: Collect coverage
        run: pnpm run -C pandora-tests coverage:report --reporter=text
      - name: Save test report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: pandora-tests/playwright-report/
          retention-days: 30
