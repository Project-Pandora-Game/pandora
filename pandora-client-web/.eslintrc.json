{
	"extends": [
		"../pandora-common/.eslintrc.json",
		"plugin:react/recommended",
		"plugin:react-hooks/recommended"
	],
	"env": {
		"browser": true
	},
	"ignorePatterns": [".git", "node_modules", "dist"],
	"root": true,
	"plugins": ["@typescript-eslint", "react", "react-hooks"],
	"overrides": [
		{
			"extends": ["plugin:@typescript-eslint/recommended-requiring-type-checking"],
			"files": ["*.ts", "*.tsx"],
			"parser": "@typescript-eslint/parser",
			"parserOptions": {
				"project": ["./tsconfig.src.json", "./tsconfig.test.json", "./webpack.tsconfig.json"],
				"sourceType": "module"
			},
			"rules": {
				"@typescript-eslint/naming-convention": [
					"warn",
					{
						"selector": "default",
						"format": ["camelCase"],
						"leadingUnderscore": "allow",
						"trailingUnderscore": "allow"
					},
					{
						"selector": "variable",
						"format": ["camelCase", "UPPER_CASE"],
						"leadingUnderscore": "forbid"
					},
					{
						"selector": "function",
						"modifiers": ["global"],
						"format": null,
						"custom": {
							"regex": "^(use)?[A-Z][a-zA-Z0-9]*$",
							"match": true
						}
					},
					{
						"selector": "variable",
						"modifiers": ["global"],
						"format": ["camelCase", "PascalCase"]
					},
					{
						"selector": "variable",
						"modifiers": ["const", "global"],
						"format": ["camelCase", "PascalCase", "UPPER_CASE"]
					},
					{
						"selector": "variable",
						"format": ["UPPER_CASE"],
						"leadingUnderscore": "allow",
						"modifiers": ["const", "global"],
						"types": ["boolean", "string", "number"]
					},
					{
						"selector": ["variable", "parameter"],
						"format": null,
						"modifiers": ["destructured"]
					},
					{
						"selector": "parameter",
						"format": ["camelCase"],
						"modifiers": ["unused"],
						"leadingUnderscore": "require"
					},
					{
						"selector": "typeLike",
						"format": ["PascalCase"]
					},
					{
						"selector": "enumMember",
						"format": ["UPPER_CASE"]
					}
				]
			}
		}
	],
	"settings": {
		"react": {
			"version": "detect"
		}
	},
	"rules": {
		// NOs
		"react/no-unsafe": ["error", { "checkAliases": true }],
		"react/no-unstable-nested-components": "error",
		"react/jsx-no-script-url": "error",
		// Warnings
		"react/default-props-match-prop-types": "warn",
		"react/no-typos": "warn",
		"react/prefer-stateless-function": "warn",
		"react/style-prop-object": "warn",
		"react/void-dom-elements-no-children": "warn",
		"react/jsx-no-constructed-context-values": "warn",
		"react/jsx-no-useless-fragment": ["warn", { "allowExpressions": true }],
		// Style rules
		"react/destructuring-assignment": ["warn", "always"],
		"react/jsx-closing-tag-location": "warn",
		"react/jsx-curly-newline": ["warn", "consistent"],
		"react/jsx-curly-spacing": ["warn", { "when": "always", "children": true }],
		"react/jsx-equals-spacing": ["warn", "never"],
		"react/jsx-filename-extension": ["warn", { "extensions": [".jsx", ".tsx"] }],
		"react/jsx-indent": ["warn", "tab"],
		"react/jsx-pascal-case": "warn",
		"react/jsx-props-no-multi-spaces": "warn",
		"react/jsx-tag-spacing": "warn",
		"react/jsx-wrap-multilines": [
			"warn",
			{
				"declaration": "parens-new-line",
				"assignment": "parens-new-line",
				"return": "parens-new-line",
				"arrow": "parens-new-line",
				"condition": "ignore",
				"logical": "ignore",
				"prop": "ignore"
			}
		],
		"react/no-unescaped-entities": [
			"warn",
			{
				"forbid": [
					{
						"char": ">",
						"alternatives": ["&gt;"]
					},
					{
						"char": "}",
						"alternatives": ["&#125;"]
					}
				]
			}
		]
	}
}
