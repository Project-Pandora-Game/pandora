@use '../../styles/common';
@use 'HeaderButton';

.Header, .OverlayHeader {
	.onlineStatusIndicator {
		width: 1.25em !important;
		height: 1.25em !important;
		margin: 0 common.spacing('small') !important;
		object-fit: contain;
	}

	.statusSelectorMenuContainer {
		position: absolute;
		z-index: 1001;
		top: 100%;
		max-height: 0;
		width: max(100%, 8em);
		left: calc(min(0px, 50% - 4em));
		overflow: hidden;

		transition: all 350ms linear;

		.statusSelectorMenu {
			@include common.flex(column);

			padding: common.spacing('small');
			gap: common.spacing('small');
			max-height: 50vh;
			overflow-y: scroll;
			border: 3px solid common.$theme-separator;
			background: common.$theme-header-collapsable-background;
			color: common.$theme-header-collapsable-text;

			.Button {
				min-height: 2.5em;
			}
		}

		&.open {
			max-height: 50vh;
		}
	}
}

.Header {
	@include common.flex(row, wrap);
	background: common.$theme-header-background;
	color: common.$theme-header-text;
	width: 100%;
	position: relative;

	& > div {
		@include common.flex(row, wrap);
		align-items: flex-start;
		min-height: HeaderButton.$header-button-height;

		&.rightHeader, &.leftHeader {
			align-items: stretch;

			.currentCharacter {
				display: flex;
				height: 100%;
				padding: 1px;
				gap: 1px;
				border-width: 1px;

				.avatar {
					height: 100%;
					aspect-ratio: 1;
					object-fit: contain;
					contain: size;
				}

				&:hover img {
					filter: brightness(80%);
				}
			}

		}

		.label {
			display: none;
		}
	}

	.label, .headerText {
		@include common.center-flex;
		min-width: 6em;
		min-height: HeaderButton.$header-button-height;
		padding: 0 0.5em;
	}

	.collapsableHeaderButton {
		background: common.$theme-header-button-normal-background;
		color: common.$theme-header-button-normal-text;
		border: 0.2em solid transparent;

		&:hover {
			background: common.$theme-header-button-hover-background;
			color: common.$theme-header-button-hover-text;

			img {
				filter: common.$theme-header-button-hover-imgfilter;
			}
		}

		&:focus-visible {
			outline: 0;
			border-color: common.$theme-header-button-visiblefocus-outline;
		}
	}
}

.ServerAnnouncementHeader {
	@include common.flex(row);
	background: common.$theme-header-background;
	color: common.$theme-header-text;
	width: 100%;
	position: relative;
	min-height: 1em;
	padding: common.spacing(small);
	gap: common.spacing(small);
	border-bottom: 2px solid common.$theme-separator;
	align-items: center;

	&.type-info {
		background: common.$theme-noticebox-background;
		color: common.$theme-noticebox-text;
	}

	&.type-warning {
		background: common.$theme-warningbox-background;
		color: common.$theme-warningbox-text;
	}

	> .IconButton {
		height: 2em;
	}
}

.OverlayHeader {
	position: absolute;
	inset: 0;
	z-index: 1000;
	margin: 0;
	overflow: hidden;
	pointer-events: auto;
	background: common.$theme-header-collapsable-background;
	color: common.$theme-header-collapsable-text;
	transition: all 200ms linear;

	&.hide {
		transform: translateY(-100vh);
	}

	>.content {
		flex: 1;
		padding: 2em;
		overflow: auto;

		> hr {
			width: 100%;
		}

		> div {
			@include common.flex(column, wrap);
			align-items: stretch;
			min-height: HeaderButton.$header-button-height;
			flex: unset;

			> button, > span, > .currentAccount > button {
				@include common.flex(row);
				align-items: center;
				min-width: 6em;
				min-height: HeaderButton.$header-button-height;
				padding: 0 1em;
			}

			> span, > .currentAccount > button {
				padding: 0 1em 0 3.7em;
			}

			> .currentAccount > button {
				width: 100%;
				justify-content: start;
			}

			.label {
				padding: 0 0.2em;
			}

			.currentCharacter {
				display: flex;

				.avatar {
					height: 2.1em;
					aspect-ratio: 1;
					margin: 0 0.2em;
					object-fit: contain;
					contain: size;
				}

				&:hover img {
					filter: brightness(80%);
				}
			}
		}
	}
}
